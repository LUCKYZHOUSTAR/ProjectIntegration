<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

	<mybatis:scan base-package="com.zhou.test.dataSource.dao.**.mappers" />
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="50" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="500" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
		<property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
		<property name="connectionProperties" value="config.decrypt=false" /> <!-- 提示对数据库密码进行解密 -->
	</bean>



	<!-- <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" -->
	<!-- init-method="init" destroy-method="close"> -->
	<!-- 数据库基本信息配置 -->
	<!-- <property name="driverClassName" value="${oracle.driver}" /> -->
	<!-- <property name="url" value="${oracle.url}" /> -->
	<!-- <property name="username" value="${oracle.username}" /> -->
	<!-- <property name="password" value="${oracle.password}" /> -->
	<!-- 初始化连接数量 -->
	<!-- <property name="initialSize" value="${druid.initialSize}" /> -->
	<!-- 最大并发连接数 -->
	<!-- <property name="maxActive" value="${druid.maxActive}" /> -->
	<!-- 最大空闲连接数 -->
	<!-- <property name="maxIdle" value="${druid.maxIdle}" /> -->
	<!-- 最小空闲连接数 -->
	<!-- <property name="minIdle" value="${druid.minIdle}" /> -->
	<!-- 配置获取连接等待超时的时间 -->
	<!-- <property name="maxWait" value="${druid.maxWait}" /> -->
	<!-- 超过时间限制是否回收 -->
	<!-- <property name="removeAbandoned" value="${druid.removeAbandoned}" /> -->
	<!-- 超过时间限制多长； -->
	<!-- <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" 
		/> -->
	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	<!-- <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" 
		/> -->
	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<!-- <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" 
		/> -->
	<!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
	<!-- <property name="validationQuery" value="${druid.validationQuery}" /> -->
	<!-- 申请连接的时候检测 -->
	<!-- <property name="testWhileIdle" value="${druid.testWhileIdle}" /> -->
	<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
	<!-- <property name="testOnBorrow" value="${druid.testOnBorrow}" /> -->
	<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
	<!-- <property name="testOnReturn" value="${druid.testOnReturn}" /> -->
	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	<!-- <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" 
		/> -->
	<!-- <property name="maxPoolPreparedStatementPerConnectionSize" -->
	<!-- value="${druid.maxPoolPreparedStatementPerConnectionSize}" /> -->
	<!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall -->
	<!-- <property name="filters" value="${druid.filters}" /> -->
	<!-- </bean> -->


	<!-- <bean id="dataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
	<!-- <property name="url" value="jdbc:mysql://localhost:3306/test" /> -->
	<!-- <property name="username" value="root" /> -->
	<!-- <property name="password" value="123456" /> -->
	<!-- </bean> -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.zhou.test.dataSource.dao.**.domain" />
		<property name="mapperLocations"
			value="classpath*:com/zhou/test/dataSource/dao/mappers/**/*.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="jdbTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="jdbTransactionManager" />
		<property name="isolationLevelName" value="ISOLATION_DEFAULT" />
	</bean>
</beans>